<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="SESA - Version 1 (PreRelease)" resourceRoot="" soapui-version="3.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="RegistrationWebServiceServiceSoapBinding" type="wsdl" bindingName="{http://sesa.sti2.at/services/}RegistrationWebServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://sesa.sti2.at:8080/registration-webservice/services/register?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sesa.sti2.at:8080/registration-webservice/services/register?wsdl"><con:part><con:url>http://sesa.sti2.at:8080/registration-webservice/services/register?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="RegistrationWebServiceService" targetNamespace="http://sesa.sti2.at/services/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://sesa.sti2.at/services/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema elementFormDefault="unqualified" targetNamespace="http://sesa.sti2.at/services/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="getVersion" type="tns:getVersion"/>
      <xs:element name="getVersionResponse" type="tns:getVersionResponse"/>
      <xs:element name="register" type="tns:register"/>
      <xs:element name="registerResponse" type="tns:registerResponse"/>
      <xs:complexType name="register">
        <xs:sequence>
          <xs:element minOccurs="0" name="wsdlURL" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="registerResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getVersion">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getVersionResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getVersion">
    <wsdl:part element="tns:getVersion" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="register">
    <wsdl:part element="tns:register" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getVersionResponse">
    <wsdl:part element="tns:getVersionResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="registerResponse">
    <wsdl:part element="tns:registerResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RegistrationWebService">
    <wsdl:documentation>SESA Discovery Component</wsdl:documentation>
    <wsdl:operation name="register">
      <wsdl:input message="tns:register" name="register"></wsdl:input>
      <wsdl:output message="tns:registerResponse" name="registerResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <wsdl:input message="tns:getVersion" name="getVersion"></wsdl:input>
      <wsdl:output message="tns:getVersionResponse" name="getVersionResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RegistrationWebServiceServiceSoapBinding" type="tns:RegistrationWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="register">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="register">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="registerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getVersion">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getVersion">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getVersionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RegistrationWebServiceService">
    <wsdl:port binding="tns:RegistrationWebServiceServiceSoapBinding" name="RegistrationWebServicePort">
      <soap:address location="http://sesa.sti2.at:8080/registration-webservice/services/register"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://sesa.sti2.at:8080/registration-webservice/services/register</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="getVersion" bindingOperationName="getVersion" type="Request-Response" outputName="getVersionResponse" inputName="getVersion" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/registration-webservice/services/register</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getVersion/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/RegistrationWebService/getVersion"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="register" bindingOperationName="register" type="Request-Response" outputName="registerResponse" inputName="register" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="WeatherService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/registration-webservice/services/register</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:register>
         <!--Optional:-->
         <wsdlURL>http://sesa.sti2.at/services/globalweather.sawsdl</wsdlURL>
      </ser:register>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/RegistrationWebService/register"/><con:wsrmConfig version="1.2"/></con:call><con:call name="ValenciaPortService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/registration-webservice/services/register</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:register>
         <wsdlURL>http://sesa.sti2.at/services/valenciaPort.sawsdl</wsdlURL>
      </ser:register>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/RegistrationWebService/register"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="DiscoveryWebServiceServiceSoapBinding" type="wsdl" bindingName="{http://sesa.sti2.at/services/}DiscoveryWebServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://sesa.sti2.at:8080/discovery-webservice/services/discovery?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sesa.sti2.at:8080/discovery-webservice/services/discovery?wsdl"><con:part><con:url>http://sesa.sti2.at:8080/discovery-webservice/services/discovery?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DiscoveryWebServiceService" targetNamespace="http://sesa.sti2.at/services/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://sesa.sti2.at/services/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://sesa.sti2.at/services/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="discover" type="tns:discover"/>
      <xs:element name="discoverResponse" type="tns:discoverResponse"/>
      <xs:element name="getIServeModel" type="tns:getIServeModel"/>
      <xs:element name="getIServeModelResponse" type="tns:getIServeModelResponse"/>
      <xs:element name="lookup" type="tns:lookup"/>
      <xs:element name="lookupResponse" type="tns:lookupResponse"/>
      <xs:complexType name="lookup">
        <xs:sequence>
          <xs:element minOccurs="0" name="namespace" type="xs:string"/>
          <xs:element minOccurs="0" name="operationName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="lookupResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getIServeModel">
        <xs:sequence>
          <xs:element minOccurs="0" name="serviceID" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getIServeModelResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="discover">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="categoryList" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="discoverResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="lookupResponse">
    <wsdl:part element="tns:lookupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="tns:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="discoverResponse">
    <wsdl:part element="tns:discoverResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIServeModel">
    <wsdl:part element="tns:getIServeModel" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="lookup">
    <wsdl:part element="tns:lookup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIServeModelResponse">
    <wsdl:part element="tns:getIServeModelResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="discover">
    <wsdl:part element="tns:discover" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="DiscoveryWebService">
    <wsdl:documentation>SESA Discovery Component</wsdl:documentation>
    <wsdl:operation name="lookup">
      <wsdl:input message="tns:lookup" name="lookup"></wsdl:input>
      <wsdl:output message="tns:lookupResponse" name="lookupResponse"></wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIServeModel">
      <wsdl:input message="tns:getIServeModel" name="getIServeModel"></wsdl:input>
      <wsdl:output message="tns:getIServeModelResponse" name="getIServeModelResponse"></wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="discover">
      <wsdl:input message="tns:discover" name="discover"></wsdl:input>
      <wsdl:output message="tns:discoverResponse" name="discoverResponse"></wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DiscoveryWebServiceServiceSoapBinding" type="tns:DiscoveryWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="lookup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="lookup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="lookupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIServeModel">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getIServeModel">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getIServeModelResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="discover">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="discover">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="discoverResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DiscoveryWebServiceService">
    <wsdl:port binding="tns:DiscoveryWebServiceServiceSoapBinding" name="DiscoveryWebServicePort">
      <soap:address location="http://sesa.sti2.at:8080/discovery-webservice/services/discovery"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="discover" bindingOperationName="discover" type="Request-Response" outputName="discoverResponse" inputName="discover" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="MaritimeCategory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:discover>
         <!--Zero or more repetitions:-->
         <categoryList>http://www.sti2.at/E-Freight/ServiceCategories#Maritime</categoryList>
      </ser:discover>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/DiscoveryWebService/discover"/><con:wsrmConfig version="1.2"/></con:call><con:call name="BusinessCategory"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:discover>
         <!--Zero or more repetitions:-->
         <categoryList>http://www.sti2.at/E-Freight/ServiceCategories#BUSINESS</categoryList>
      </ser:discover>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/DiscoveryWebService/discover"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="getIServeModel" bindingOperationName="getIServeModel" type="Request-Response" outputName="getIServeModelResponse" inputName="getIServeModel" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="ExportWeatherService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getIServeModel>
         <!--Optional:-->
         <serviceID>http://www.webserviceX.NET#GlobalWeather</serviceID>
      </ser:getIServeModel>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/DiscoveryWebService/getIServeModel"/><con:wsrmConfig version="1.2"/></con:call><con:call name="ExportValenciaPort"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:getIServeModel>
         <!--Optional:-->
         <serviceID>http://sesa.sti2.at/services/dummy/#ValenciaPortWebServiceService</serviceID>
      </ser:getIServeModel>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/DiscoveryWebService/getIServeModel"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="lookup" bindingOperationName="lookup" type="Request-Response" outputName="lookupResponse" inputName="lookup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="GetWeather"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/discovery-webservice/services/discovery</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:lookup>
         <!--Optional:-->
         <namespace>http://www.webserviceX.NET</namespace>
         <!--Optional:-->
         <operationName>GetWeather</operationName>
      </ser:lookup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/DiscoveryWebService/lookup"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="InvokerWebServiceServiceSoapBinding" type="wsdl" bindingName="{http://sesa.sti2.at/services/}InvokerWebServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://sesa.sti2.at:8080/invoker-webservice/services/invoker?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://sesa.sti2.at:8080/invoker-webservice/services/invoker?wsdl"><con:part><con:url>http://sesa.sti2.at:8080/invoker-webservice/services/invoker?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="InvokerWebServiceService" targetNamespace="http://sesa.sti2.at/services/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://sesa.sti2.at/services/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://sesa.sti2.at/services/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="checkAvailability" type="tns:checkAvailability"/>
      <xs:element name="checkAvailabilityResponse" type="tns:checkAvailabilityResponse"/>
      <xs:element name="invoke" type="tns:invoke"/>
      <xs:element name="invokeResponse" type="tns:invokeResponse"/>
      <xs:complexType name="checkAvailability">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="checkAvailabilityResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invoke">
        <xs:sequence>
          <xs:element minOccurs="0" name="serviceID" type="xs:string"/>
          <xs:element minOccurs="0" name="operation" type="xs:string"/>
          <xs:element minOccurs="0" name="inputData" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="invokeResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="Exception">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Exception" type="tns:Exception"/>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="invoke">
    <wsdl:part element="tns:invoke" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="invokeResponse">
    <wsdl:part element="tns:invokeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="Exception">
    <wsdl:part element="tns:Exception" name="Exception"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAvailability">
    <wsdl:part element="tns:checkAvailability" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkAvailabilityResponse">
    <wsdl:part element="tns:checkAvailabilityResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="InvokerWebService">
    <wsdl:documentation>SESA Invoker Component</wsdl:documentation>
    <wsdl:operation name="checkAvailability">
      <wsdl:input message="tns:checkAvailability" name="checkAvailability"></wsdl:input>
      <wsdl:output message="tns:checkAvailabilityResponse" name="checkAvailabilityResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="invoke">
      <wsdl:input message="tns:invoke" name="invoke"></wsdl:input>
      <wsdl:output message="tns:invokeResponse" name="invokeResponse"></wsdl:output>
      <wsdl:fault message="tns:Exception" name="Exception"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="InvokerWebServiceServiceSoapBinding" type="tns:InvokerWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="checkAvailability">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkAvailability">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkAvailabilityResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="invoke">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="invoke">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="invokeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="Exception">
        <soap:fault name="Exception" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="InvokerWebServiceService">
    <wsdl:port binding="tns:InvokerWebServiceServiceSoapBinding" name="InvokerWebServicePort">
      <soap:address location="http://sesa.sti2.at:8080/invoker-webservice/services/invoker"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://sesa.sti2.at:8080/invoker-webservice/services/invoker</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="checkAvailability" bindingOperationName="checkAvailability" type="Request-Response" outputName="checkAvailabilityResponse" inputName="checkAvailability" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/invoker-webservice/services/invoker</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:checkAvailability/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/InvokerWebService/checkAvailability"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="invoke" bindingOperationName="invoke" type="Request-Response" outputName="invokeResponse" inputName="invoke" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="WeatherService"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/invoker-webservice/services/invoker</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:invoke>
         <!--Optional:-->
         <serviceID>http://www.webserviceX.NET#GlobalWeather</serviceID>
         <!--Optional:-->
         <operation>GetWeather</operation>
         <!--Optional:-->
         <inputData>
<![CDATA[
<!DOCTYPE rdf:RDF [
        <!ENTITY msm "http://cms-wg.sti2.org/ns/minimal-service-model#" >
]>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns="http://www.sti2.at/sesa/#"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:sawsdl="http://www.w3.org/ns/sawsdl#"
    xmlns:http="http://www.w3.org/2008/http-methods#"
    xmlns:wl="http://www.wsmo.org/ns/wsmo-lite#"
    xmlns:vs="http://www.w3.org/2003/06/sw-vocab-status/ns#"
    xmlns:rest="http://www.wsmo.org/ns/hrests#"
    xmlns:msm="&msm;">

<rdf:Description rdf:about="#WeatherService">
	<rdf:type rdf:resource="&msm;Service" />
	<name xmlns="http://www.coin-ip.eu/tutorial/Weather#" rdf:datatype="http://www.w3.org/2001/XMLSchema#string">North America</name>
</rdf:Description>

<rdf:Description rdf:about="http://www.coin-ip.eu/tutorial/Weather#USA">
	<rdf:type rdf:resource="http://www.coin-ip.eu/tutorial/Weather#Country"/>
	<name xmlns="http://www.coin-ip.eu/tutorial/Weather#" rdf:datatype="http://www.w3.org/2001/XMLSchema#string">United States</name>
	<continent xmlns="http://www.coin-ip.eu/tutorial/Weather#" rdf:resource="http://www.coin-ip.eu/tutorial/Weather#NorthAmerica"/>
</rdf:Description>

<rdf:Description rdf:about="http://www.coin-ip.eu/tutorial/Weather#NY">
	<rdf:type rdf:resource="http://www.coin-ip.eu/tutorial/Weather#City"/>
	<name xmlns="http://www.coin-ip.eu/tutorial/Weather#" rdf:datatype="http://www.w3.org/2001/XMLSchema#string">New York</name>
	<country xmlns="http://www.coin-ip.eu/tutorial/Weather#" rdf:resource="http://www.coin-ip.eu/tutorial/Weather#USA"/>
</rdf:Description>

<rdf:Description rdf:about="http://www.coin-ip.eu/tutorial/WeatherGoal#request">
	<rdf:type rdf:resource="http://www.coin-ip.eu/tutorial/WeatherProcess#WeatherRequest"/>
	<city xmlns="http://www.coin-ip.eu/tutorial/WeatherProcess#" rdf:resource="http://www.coin-ip.eu/tutorial/Weather#NY"/>
</rdf:Description>

</rdf:RDF>
]]]]>><![CDATA[
	</inputData>
      </ser:invoke>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/InvokerWebService/invoke"/><con:wsrmConfig version="1.2"/></con:call><con:call name="ValenciaPort"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://sesa.sti2.at:8080/invoker-webservice/services/invoker</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://sesa.sti2.at/services/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:invoke>
         <!--Optional:-->
         <serviceID>http://sesa.sti2.at/services/dummy/#ValenciaPortWebServiceService</serviceID>
         <!--Optional:-->
         <operation>submitFALForm</operation>
         <!--Optional:-->
         <inputData>
<![CDATA[
<!DOCTYPE rdf:RDF [
        <!ENTITY efreight "http://demo.sti2.at/efreight/ontologies/FalFormsOntology.rdf#" >
]>

<rdf:RDF
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
        xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
        xmlns:dc="http://purl.org/dc/elements/1.1/"
        xmlns:dct="http://purl.org/dc/terms/"
        xmlns:efreight="&efreight;">

        <efreight:GeneralDeclarationF1 rdf:about="#FAL_Form1_3f8b09d5-c430-4b6a-934b-f5e4ad25977b">
                <efreight:hasArrivalOrDeparture rdf:resource="&efreight;Arrival"/>
                <efreight:hasArrivalOrDepartureDateTime>2011-02-24T00:00:00</efreight:hasArrivalOrDepartureDateTime>
                <efreight:hasPort>
                        <efreight:Port>
                                <efreight:hasPortCode>ESVLC</efreight:hasPortCode>
                                <efreight:hasPortName>Valencia</efreight:hasPortName>
                        </efreight:Port>
                </efreight:hasPort>
                <efreight:hasBriefDescriptionOfCargo/>
                <efreight:hasBriefParticularsOfVoyage/>
                <efreight:hasDepartureDateTime/>
                <efreight:hasDeparturePort/>
                <efreight:hasGeneralDeclarationId>354</efreight:hasGeneralDeclarationId>
                <efreight:hasLastPortOfCall>
                        <efreight:Port>
                                <efreight:hasPortCode>AEAUH</efreight:hasPortCode>
                                <efreight:hasPortName>Abu Dhabi</efreight:hasPortName>
                        </efreight:Port>
                </efreight:hasLastPortOfCall>
                <efreight:hasNextPortOfCall/>
                <efreight:hasNumberOfCrew>24</efreight:hasNumberOfCrew>
                <efreight:hasNumberOfPassengers>2</efreight:hasNumberOfPassengers>
                <efreight:hasRemarks/>
                <efreight:hasRequirementsInWasteResidueReception/>
                <efreight:hasShip rdf:resource="#ship_9HVG8"/>
        </efreight:GeneralDeclarationF1>

        <efreight:Ship rdf:about="#ship_9HVG8">
                <efreight:hasCallSign>9HVG8</efreight:hasCallSign>
                <efreight:hasCoRDate/>
                <efreight:hasCoRNumber/>
                <efreight:hasFlagState>
                        <efreight:Country>
                                <efreight:hasCountryName>Malta</efreight:hasCountryName>
                                <efreight:hasCountryCode>MT</efreight:hasCountryCode>
                        </efreight:Country>
                </efreight:hasFlagState>
                <efreight:hasGrossTonnage>140000</efreight:hasGrossTonnage>
                <efreight:hasNetTonnage>40000</efreight:hasNetTonnage>
                <efreight:hasIMONumber>9191254</efreight:hasIMONumber>
                <efreight:hasShipMasterName>Jan Tore Pedersen</efreight:hasShipMasterName>
                <efreight:hasShipType>Cargo</efreight:hasShipType>
                <efreight:hasShipName>BACCARA</efreight:hasShipName>
                <efreight:hasShipPositionInPort/>
        </efreight:Ship>

</rdf:RDF>
]]]]>><![CDATA[
	 </inputData>
      </ser:invoke>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://sesa.sti2.at/services/InvokerWebService/invoke"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/></con:soapui-project>