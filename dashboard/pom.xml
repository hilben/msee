<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<packaging>war</packaging>
	<artifactId>dashboard</artifactId>

	<parent>
		<groupId>at.sti2.msee.delivery</groupId>
		<artifactId>platform</artifactId>
		<version>m17.1-SNAPSHOT</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>registration.core</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>discovery.core</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				  <configuration>
					<url>http://localhost:8080/manager/html</url>
					<warFile>target/ROOT.war</warFile>
					<warDirectory>ROOT</warDirectory>
					<username>tomcat</username>
					<password>tomcat</password>
                  </configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-java2ws-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- This tasks only creates a basic structure expected by maven, so 
							it can do its work -->
						<id>create-mock-web-descriptor</id>
						<phase>compile</phase>
						<configuration>
							<executable>/bin/sh</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>-c</argument>
								<argument>
									mkdir -p src/main/webapp/WEB-INF
									touch src/main/webapp/WEB-INF/web.xml
								</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<execution>
						<!-- Now in the package phase we copy the jar files that maven put 
							into the fake web app to our rails' lib folder -->
						<id>copy-needed-jars-into-lib</id>
						<phase>package</phase>
						<configuration>
							<executable>/bin/sh</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>-c</argument>
								<argument>
									rm -f lib/*.jar
									cp target/railsApp/WEB-INF/lib/*.jar lib
									rm -rf target/railsApp*
									rm -rf src
								</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<execution>
						<!-- Here we optionally create the final war file containing our rails 
							app using warbler, doing a small cleanup of the files and folders maven created -->
						<id>create-final-war</id>
						<phase>package</phase>
						<configuration>
							<executable>/bin/sh</executable>
							<workingDirectory>.</workingDirectory>
							<arguments>
								<argument>-c</argument>
								<argument>
									rm -rf *.war tmp/war
									jruby -S warble
									mv *.war target/ROOT.war
								</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

<!--  Add all dependencies to the lib folder of the rails app -->
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <phase>install</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory> ${basedir}/lib/jar</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                    </plugin>

		</plugins>


	</build>
	           



</project>
					