.container
  .row-fluid
    .hero-unit
      .row
        .span2
          %h1 &nbsp;
          = image_tag "xslt.png"
        .span8
          %h1 XSLT Transformation
          %p{"align" => "justify"}
            The following page describes, on the base of a simple example, how to
            transform one XML Schema instance (GS1) to another one (TEP). As intermediate
            step the e-Freight Ontology is used. The lifting/lowering from/to the ontology
            allows the integration with new XML Schemas, without the need to change
            the existing ones.

    %h2 The Scenario
    %p{"align" => "justify"}
      As first demonstration an example instance of the XML Schema GS1 is transformed to
      TEP (Transport Execution Plan) and vice versa. For this purpose the
      %a{"href" => "http://sesa.sti2.at:8080/grounding-webservice/services", "target" => "_blank"}Grounding Component
      is used. As intermediate step the XML message are transformed to an instance of the
      %a{"href" => "/doc/efreight/ontology", "target" => "_blank"}e-Freight Ontology

    %h2 Prerequisites
    %p{"align" => "justify"}
      In order to use the
      %a{"href" => "http://sesa.sti2.at:8080/grounding-webservice/services", "target" => "_blank"}Grounding Component
      , the service needs as input the XML message to transform and two XML scripts for the transformation.
      We differ between the two scenarios.

      %h4 (1) GS1 => TEP
      %ul
        %li
          %strong xsltToOntologyURL ...
          %a{"href" => "/efreight/gs1_tep_demonstration/gs12ontology.xslt"} GS1 to Ontology XSL Transformation Script
        %li
          %strong xsltToOutputURL ...
          %a{"href" => "/efreight/gs1_tep_demonstration/ontology2tep.xslt"} Ontology to TEP XSL Transformation Script

      %h4 (2) TEP => GS1
      %ul
        %li
          %strong xsltToOntologyURL ...
          %a{"href" => "/efreight/gs1_tep_demonstration/tep2ontology.xslt"} TEP to Ontology XSL Transformation Script
        %li
          %strong xsltToOutputURL ...
          %a{"href" => "/efreight/gs1_tep_demonstration/ontology2gs1.xslt"} Ontology to GS1 XSL Transformation Script

    %p{"align" => "justify"}
      In order to write the transformation scripts a mapping between the XML Schemas and the Ontology has to be defined.
      It is not necessary to define transformation scripts for the transformation between existing XML schemas. For each
      XML schema there is needed only one lifting (xml to ontology) and one lowering script (ontology to xml). This guarantees
      transformation capabilities to all and from all existing formats.

    %table.table.table-striped
      %tr
        %th Type in Ontology
        %th GS1
        %th Ontology
        %th TEP
      %tr
        %td Class
        %td StandardBusinessDocumentHeader
        %td Document
        %td TransportExceutionPlanRequest
      %tr
        %td Class
        %td transportInstructionConsignment
        %td Consignment
        %td -
      %tr
        %td Class
        %td transportInstructionConsignmentItem
        %td TransportHandlingUnit
        %td ReferencedGoodItem
      %tr
        %td DatatypeProperty
        %td ginc, gln, scc or InstanceIdentifier
        %td hasIdentifier
        %td ID
      %tr
        %td DatatypeProperty
        %td CreationDateAndTime
        %td issueAt
        %td issueDate + 'T' + issueTime
      %tr
        %td DatatypeProperty
        %td -
        %td hasNetWeight
        %td NetWeightMeasure
      %tr
        %td DatatypeProperty
        %td hasTotalPackageQuantity
        %td hasTotalPackageQuantity
        %td (Package) Quantity
      %tr
        %td DatatypeProperty
        %td cargotTypeDescription
        %td hasDescription
        %td Description
      %tr
        %td (ObjectProperty) Class
        %td consignor
        %td (hasConsignor) Party
        %td SenderParty
      %tr
        %td (ObjectProperty) Class
        %td consignee
        %td (hasConsignee) Party
        %td ReceiverParty

    %h2 Transformation
    %p{"align" => "justify"}
      Use the
      %a{"href" => "/dashboards/grounding"}demonstration frontend
      with the pre-defined examples.

