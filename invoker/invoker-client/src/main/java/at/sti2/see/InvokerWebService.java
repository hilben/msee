/**
 * Copyright (C) 2011 STI Innsbruck, UIBK
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 */
package at.sti2.see;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * SESA Invoker Component
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "InvokerWebService", targetNamespace = "http://see.sti2.at/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface InvokerWebService {


    /**
     * 
     * @param operation
     * @param serviceID
     * @param inputData
     * @return
     *     returns java.lang.String
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "invoke", targetNamespace = "http://sesa.sti2.at/services/", className = "at.sti2.see.Invoke")
    @ResponseWrapper(localName = "invokeResponse", targetNamespace = "http://sesa.sti2.at/services/", className = "at.sti2.see.InvokeResponse")
    public String invoke(
        @WebParam(name = "serviceID", targetNamespace = "")
        String serviceID,
        @WebParam(name = "operation", targetNamespace = "")
        String operation,
        @WebParam(name = "inputData", targetNamespace = "")
        String inputData)
        throws Exception_Exception
    ;

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkAvailability", targetNamespace = "http://sesa.sti2.at/services/", className = "at.sti2.see.CheckAvailability")
    @ResponseWrapper(localName = "checkAvailabilityResponse", targetNamespace = "http://sesa.sti2.at/services/", className = "at.sti2.see.CheckAvailabilityResponse")
    public boolean checkAvailability();

}
